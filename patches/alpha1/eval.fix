--- /home/bourbon/php-3.0a1/language-scanner.lex	Thu Oct 30 01:07:25 1997
+++ language-scanner.lex	Thu Oct 30 17:50:39 1997
@@ -103,6 +103,9 @@
 	
 	convert_to_string(str);
 	
+	if (str->value.strval==empty_string) { /* optimize empty eval's */
+		return;
+	}
 	/* enforce two trailing NULLs for flex... */
 	str->value.strval = (char *) erealloc(str->value.strval,str->strlen+2);
 	str->value.strval[str->strlen+1]=0;
@@ -604,7 +607,7 @@
 			seek_token(&token_cache_manager,lex_state->return_offset);
 			BEGIN(lex_state->state);
 			yy_switch_to_buffer(lex_state->buffer_state);
-			efree(lex_state->eval_string);
+			STR_FREE(lex_state->eval_string);
 			stack_del_top(&input_source_stack);
 			return DONE_EVAL;
 		}
--- /home/bourbon/php-3.0a1/language-scanner.c	Thu Oct 30 01:09:02 1997
+++ language-scanner.c	Thu Oct 30 18:09:41 1997
@@ -631,7 +631,7 @@
 */
 
 
-/* $Id$ */
+/* $Id$ */
 
 
 #include "parser.h"
@@ -708,6 +708,9 @@
 	
 	convert_to_string(str);
 	
+	if (str->value.strval==empty_string) { /* optimize empty eval's */
+		return;
+	}
 	/* enforce two trailing NULLs for flex... */
 	str->value.strval = (char *) erealloc(str->value.strval,str->strlen+2);
 	str->value.strval[str->strlen+1]=0;
@@ -730,7 +733,7 @@
 
 #define ENCAPS 3
 
-#line 734 "language-scanner.c"
+#line 737 "language-scanner.c"
 
 /* Macros after this point can all be overridden by user definitions in
  * section 1.
@@ -881,10 +884,10 @@
 	register char *yy_cp, *yy_bp;
 	register int yy_act;
 
-#line 138 "language-scanner.lex"
+#line 141 "language-scanner.lex"
 
 
-#line 888 "language-scanner.c"
+#line 891 "language-scanner.c"
 
 	if ( yy_init )
 		{
@@ -977,399 +980,399 @@
 	{ /* beginning of action switch */
 case 1:
 YY_RULE_SETUP
-#line 140 "language-scanner.lex"
+#line 143 "language-scanner.lex"
 {
 	return EXIT;
 }
 	YY_BREAK
 case 2:
 YY_RULE_SETUP
-#line 144 "language-scanner.lex"
+#line 147 "language-scanner.lex"
 {
 	return EXIT;
 }
 	YY_BREAK
 case 3:
 YY_RULE_SETUP
-#line 148 "language-scanner.lex"
+#line 151 "language-scanner.lex"
 {
 	return FUNCTION;
 }
 	YY_BREAK
 case 4:
 YY_RULE_SETUP
-#line 152 "language-scanner.lex"
+#line 155 "language-scanner.lex"
 {
 	return CFUNCTION;
 }
 	YY_BREAK
 case 5:
 YY_RULE_SETUP
-#line 156 "language-scanner.lex"
+#line 159 "language-scanner.lex"
 {
 	return RETURN;
 }
 	YY_BREAK
 case 6:
 YY_RULE_SETUP
-#line 160 "language-scanner.lex"
+#line 163 "language-scanner.lex"
 {
 	return IF;
 }
 	YY_BREAK
 case 7:
 YY_RULE_SETUP
-#line 164 "language-scanner.lex"
+#line 167 "language-scanner.lex"
 {
 	return ELSEIF;
 }
 	YY_BREAK
 case 8:
 YY_RULE_SETUP
-#line 168 "language-scanner.lex"
+#line 171 "language-scanner.lex"
 {
 	return ENDIF;
 }
 	YY_BREAK
 case 9:
 YY_RULE_SETUP
-#line 172 "language-scanner.lex"
+#line 175 "language-scanner.lex"
 {
 	return ELSE;
 }
 	YY_BREAK
 case 10:
 YY_RULE_SETUP
-#line 176 "language-scanner.lex"
+#line 179 "language-scanner.lex"
 {
 	return WHILE;
 }
 	YY_BREAK
 case 11:
 YY_RULE_SETUP
-#line 180 "language-scanner.lex"
+#line 183 "language-scanner.lex"
 {
 	return ENDWHILE;
 }
 	YY_BREAK
 case 12:
 YY_RULE_SETUP
-#line 184 "language-scanner.lex"
+#line 187 "language-scanner.lex"
 {
 	return DO;
 }
 	YY_BREAK
 case 13:
 YY_RULE_SETUP
-#line 188 "language-scanner.lex"
+#line 191 "language-scanner.lex"
 {
 	return FOR;
 }
 	YY_BREAK
 case 14:
 YY_RULE_SETUP
-#line 192 "language-scanner.lex"
+#line 195 "language-scanner.lex"
 {
 	return SWITCH;
 }
 	YY_BREAK
 case 15:
 YY_RULE_SETUP
-#line 196 "language-scanner.lex"
+#line 199 "language-scanner.lex"
 {
 	return ENDSWITCH;
 }
 	YY_BREAK
 case 16:
 YY_RULE_SETUP
-#line 200 "language-scanner.lex"
+#line 203 "language-scanner.lex"
 {
 	return CASE;
 }
 	YY_BREAK
 case 17:
 YY_RULE_SETUP
-#line 204 "language-scanner.lex"
+#line 207 "language-scanner.lex"
 {
 	return DEFAULT;
 }
 	YY_BREAK
 case 18:
 YY_RULE_SETUP
-#line 208 "language-scanner.lex"
+#line 211 "language-scanner.lex"
 {
 	return BREAK;
 }
 	YY_BREAK
 case 19:
 YY_RULE_SETUP
-#line 212 "language-scanner.lex"
+#line 215 "language-scanner.lex"
 {
 	return CONTINUE;
 }
 	YY_BREAK
 case 20:
 YY_RULE_SETUP
-#line 216 "language-scanner.lex"
+#line 219 "language-scanner.lex"
 {
 	return PHPECHO;
 }
 	YY_BREAK
 case 21:
 YY_RULE_SETUP
-#line 220 "language-scanner.lex"
+#line 223 "language-scanner.lex"
 {
 	return CLASS;
 }
 	YY_BREAK
 case 22:
 YY_RULE_SETUP
-#line 224 "language-scanner.lex"
+#line 227 "language-scanner.lex"
 {
 	return EXTENDS;
 }
 	YY_BREAK
 case 23:
 YY_RULE_SETUP
-#line 228 "language-scanner.lex"
+#line 231 "language-scanner.lex"
 {
 	return PHP_CLASS_OPERATOR;
 }
 	YY_BREAK
 case 24:
 YY_RULE_SETUP
-#line 232 "language-scanner.lex"
+#line 235 "language-scanner.lex"
 {
 	return NEW;
 }
 	YY_BREAK
 case 25:
 YY_RULE_SETUP
-#line 236 "language-scanner.lex"
+#line 239 "language-scanner.lex"
 {
 	return VAR;
 }
 	YY_BREAK
 case 26:
 YY_RULE_SETUP
-#line 240 "language-scanner.lex"
+#line 243 "language-scanner.lex"
 {
 	return INT_CAST;
 }
 	YY_BREAK
 case 27:
 YY_RULE_SETUP
-#line 244 "language-scanner.lex"
+#line 247 "language-scanner.lex"
 {
 	return DOUBLE_CAST;
 }
 	YY_BREAK
 case 28:
 YY_RULE_SETUP
-#line 248 "language-scanner.lex"
+#line 251 "language-scanner.lex"
 {
 	return STRING_CAST;
 }
 	YY_BREAK
 case 29:
 YY_RULE_SETUP
-#line 252 "language-scanner.lex"
+#line 255 "language-scanner.lex"
 {
 	return EVAL;
 }
 	YY_BREAK
 case 30:
 YY_RULE_SETUP
-#line 256 "language-scanner.lex"
+#line 259 "language-scanner.lex"
 {
 	return INCLUDE;
 }
 	YY_BREAK
 case 31:
 YY_RULE_SETUP
-#line 260 "language-scanner.lex"
+#line 263 "language-scanner.lex"
 {
 	return PHP_GLOBAL;
 }
 	YY_BREAK
 case 32:
 YY_RULE_SETUP
-#line 264 "language-scanner.lex"
+#line 267 "language-scanner.lex"
 {
 	return PHP_ARRAY_COUNT;
 }
 	YY_BREAK
 case 33:
 YY_RULE_SETUP
-#line 268 "language-scanner.lex"
+#line 271 "language-scanner.lex"
 {
 	return PHP_ISSET;
 }
 	YY_BREAK
 case 34:
 YY_RULE_SETUP
-#line 272 "language-scanner.lex"
+#line 275 "language-scanner.lex"
 {
 	return PHP_STATIC;
 }
 	YY_BREAK
 case 35:
 YY_RULE_SETUP
-#line 276 "language-scanner.lex"
+#line 279 "language-scanner.lex"
 {
 	return PHP_UNSET;
 }
 	YY_BREAK
 case 36:
 YY_RULE_SETUP
-#line 280 "language-scanner.lex"
+#line 283 "language-scanner.lex"
 {
 	return PHP_DOUBLE_ARROW;
 }
 	YY_BREAK
 case 37:
 YY_RULE_SETUP
-#line 284 "language-scanner.lex"
+#line 287 "language-scanner.lex"
 {
 	return PHP_DOUBLE_BRACKET_OPEN;
 }
 	YY_BREAK
 case 38:
 YY_RULE_SETUP
-#line 288 "language-scanner.lex"
+#line 291 "language-scanner.lex"
 {
 	return PHP_DOUBLE_BRACKET_CLOSE;
 }
 	YY_BREAK
 case 39:
 YY_RULE_SETUP
-#line 292 "language-scanner.lex"
+#line 295 "language-scanner.lex"
 {
 	return INCREMENT;
 }
 	YY_BREAK
 case 40:
 YY_RULE_SETUP
-#line 296 "language-scanner.lex"
+#line 299 "language-scanner.lex"
 {
 	return DECREMENT;
 }
 	YY_BREAK
 case 41:
 YY_RULE_SETUP
-#line 300 "language-scanner.lex"
+#line 303 "language-scanner.lex"
 {
 	return IS_EQUAL;
 }
 	YY_BREAK
 case 42:
 YY_RULE_SETUP
-#line 304 "language-scanner.lex"
+#line 307 "language-scanner.lex"
 {
 	return IS_NOT_EQUAL;
 }
 	YY_BREAK
 case 43:
 YY_RULE_SETUP
-#line 308 "language-scanner.lex"
+#line 311 "language-scanner.lex"
 {
 	return IS_SMALLER_OR_EQUAL;
 }
 	YY_BREAK
 case 44:
 YY_RULE_SETUP
-#line 312 "language-scanner.lex"
+#line 315 "language-scanner.lex"
 {
 	return IS_GREATER_OR_EQUAL;
 }
 	YY_BREAK
 case 45:
 YY_RULE_SETUP
-#line 316 "language-scanner.lex"
+#line 319 "language-scanner.lex"
 {
 	return PLUS_EQUAL;
 }
 	YY_BREAK
 case 46:
 YY_RULE_SETUP
-#line 320 "language-scanner.lex"
+#line 323 "language-scanner.lex"
 {
 	return MINUS_EQUAL;
 }
 	YY_BREAK
 case 47:
 YY_RULE_SETUP
-#line 324 "language-scanner.lex"
+#line 327 "language-scanner.lex"
 {
 	return MUL_EQUAL;
 }
 	YY_BREAK
 case 48:
 YY_RULE_SETUP
-#line 328 "language-scanner.lex"
+#line 331 "language-scanner.lex"
 {
 	return DIV_EQUAL;
 }
 	YY_BREAK
 case 49:
 YY_RULE_SETUP
-#line 332 "language-scanner.lex"
+#line 335 "language-scanner.lex"
 {
 	return CONCAT_EQUAL;
 }
 	YY_BREAK
 case 50:
 YY_RULE_SETUP
-#line 337 "language-scanner.lex"
+#line 340 "language-scanner.lex"
 {
 	return MOD_EQUAL;
 }
 	YY_BREAK
 case 51:
 YY_RULE_SETUP
-#line 341 "language-scanner.lex"
+#line 344 "language-scanner.lex"
 {
 	return AND_EQUAL;
 }
 	YY_BREAK
 case 52:
 YY_RULE_SETUP
-#line 345 "language-scanner.lex"
+#line 348 "language-scanner.lex"
 {
 	return OR_EQUAL;
 }
 	YY_BREAK
 case 53:
 YY_RULE_SETUP
-#line 349 "language-scanner.lex"
+#line 352 "language-scanner.lex"
 {
 	return XOR_EQUAL;
 }
 	YY_BREAK
 case 54:
 YY_RULE_SETUP
-#line 353 "language-scanner.lex"
+#line 356 "language-scanner.lex"
 {
 	return BOOLEAN_OR;
 }
 	YY_BREAK
 case 55:
 YY_RULE_SETUP
-#line 357 "language-scanner.lex"
+#line 360 "language-scanner.lex"
 {
 	return BOOLEAN_AND;
 }
 	YY_BREAK
 case 56:
 YY_RULE_SETUP
-#line 361 "language-scanner.lex"
+#line 364 "language-scanner.lex"
 {
 	return yytext[0];
 }
 	YY_BREAK
 case 57:
 YY_RULE_SETUP
-#line 365 "language-scanner.lex"
+#line 368 "language-scanner.lex"
 {
 	phplval->value.lval = atol(yytext);
 	phplval->type = IS_LONG;
@@ -1378,7 +1381,7 @@
 	YY_BREAK
 case 58:
 YY_RULE_SETUP
-#line 371 "language-scanner.lex"
+#line 374 "language-scanner.lex"
 { /* treat numbers (almost) as strings inside encapsulated strings */
 	phplval->value.strval = (char *)estrndup(yytext, yyleng);
 	phplval->strlen = yyleng;
@@ -1388,7 +1391,7 @@
 	YY_BREAK
 case 59:
 YY_RULE_SETUP
-#line 378 "language-scanner.lex"
+#line 381 "language-scanner.lex"
 {
 	phplval->value.dval = atof(yytext);
 	phplval->type = IS_DOUBLE;
@@ -1397,7 +1400,7 @@
 	YY_BREAK
 case 60:
 YY_RULE_SETUP
-#line 384 "language-scanner.lex"
+#line 387 "language-scanner.lex"
 {
 	phplval->value.strval = (char *) estrndup(yytext, yyleng);
 	phplval->strlen = yyleng;
@@ -1407,7 +1410,7 @@
 	YY_BREAK
 case 61:
 YY_RULE_SETUP
-#line 391 "language-scanner.lex"
+#line 394 "language-scanner.lex"
 {
 	if (php3_ini.short_open_tag) {
 		if (!(initialized & INIT_ENVIRONMENT)) {
@@ -1431,7 +1434,7 @@
 	YY_BREAK
 case 62:
 YY_RULE_SETUP
-#line 412 "language-scanner.lex"
+#line 415 "language-scanner.lex"
 {
 	if (!(initialized & INIT_ENVIRONMENT)) {
 		hash_environment();
@@ -1448,7 +1451,7 @@
 	YY_BREAK
 case 63:
 YY_RULE_SETUP
-#line 426 "language-scanner.lex"
+#line 429 "language-scanner.lex"
 {
 	php3_track_vars=1;
 #if DISPLAY_SOURCE_SUPPORT
@@ -1462,7 +1465,7 @@
 	YY_BREAK
 case 64:
 YY_RULE_SETUP
-#line 438 "language-scanner.lex"
+#line 441 "language-scanner.lex"
 {
 	phplval->value.strval = (char *)estrndup(yytext, yyleng);
 	phplval->strlen = yyleng;
@@ -1472,7 +1475,7 @@
 	YY_BREAK
 case 65:
 YY_RULE_SETUP
-#line 445 "language-scanner.lex"
+#line 448 "language-scanner.lex"
 {
 #if DISPLAY_SOURCE_SUPPORT
 	if (php3_display_source) {
@@ -1487,7 +1490,7 @@
 	YY_BREAK
 case 66:
 YY_RULE_SETUP
-#line 457 "language-scanner.lex"
+#line 460 "language-scanner.lex"
 { /* eat one line comments */
 #if DISPLAY_SOURCE_SUPPORT
 	if (php3_display_source) {
@@ -1504,7 +1507,7 @@
 	YY_BREAK
 case 67:
 YY_RULE_SETUP
-#line 471 "language-scanner.lex"
+#line 474 "language-scanner.lex"
 {
 	/* Eat C-style comments */
 	register int c;
@@ -1563,7 +1566,7 @@
 	YY_BREAK
 case 68:
 YY_RULE_SETUP
-#line 527 "language-scanner.lex"
+#line 530 "language-scanner.lex"
 {
 	BEGIN(INITIAL);
 	return ';';  /* implicit ';' at php-end tag */
@@ -1571,7 +1574,7 @@
 	YY_BREAK
 case 69:
 YY_RULE_SETUP
-#line 532 "language-scanner.lex"
+#line 535 "language-scanner.lex"
 {
 	BEGIN(ENCAPS);
 #if DISPLAY_SOURCE_SUPPORT
@@ -1586,7 +1589,7 @@
 	YY_BREAK
 case 70:
 YY_RULE_SETUP
-#line 544 "language-scanner.lex"
+#line 547 "language-scanner.lex"
 {
 	PUTS("\nUnexpected char: ");
 	PUTC(yytext[0]);
@@ -1595,7 +1598,7 @@
 	YY_BREAK
 case 71:
 YY_RULE_SETUP
-#line 551 "language-scanner.lex"
+#line 554 "language-scanner.lex"
 {
 	phplval->value.strval = (char *) estrndup(yytext, yyleng);
 	phplval->strlen = yyleng;
@@ -1605,7 +1608,7 @@
 	YY_BREAK
 case 72:
 YY_RULE_SETUP
-#line 558 "language-scanner.lex"
+#line 561 "language-scanner.lex"
 {
 	phplval->value.chval = yytext[0];
 	return yytext[0];
@@ -1613,7 +1616,7 @@
 	YY_BREAK
 case 73:
 YY_RULE_SETUP
-#line 563 "language-scanner.lex"
+#line 566 "language-scanner.lex"
 {
 	switch (yytext[1]) {
 		case 'n':
@@ -1636,7 +1639,7 @@
 	YY_BREAK
 case 74:
 YY_RULE_SETUP
-#line 583 "language-scanner.lex"
+#line 586 "language-scanner.lex"
 {
 	BEGIN(IN_PHP);
 #if DISPLAY_SOURCE_SUPPORT
@@ -1650,7 +1653,7 @@
 case YY_STATE_EOF(ENCAPS):
 case YY_STATE_EOF(INITIAL):
 case YY_STATE_EOF(IN_PHP):
-#line 594 "language-scanner.lex"
+#line 597 "language-scanner.lex"
 {
 	if (stack_is_empty(&input_source_stack)) {
 		yyterminate();
@@ -1664,7 +1667,7 @@
 			seek_token(&token_cache_manager,lex_state->return_offset);
 			BEGIN(lex_state->state);
 			yy_switch_to_buffer(lex_state->buffer_state);
-			efree(lex_state->eval_string);
+			STR_FREE(lex_state->eval_string);
 			stack_del_top(&input_source_stack);
 			return DONE_EVAL;
 		}
@@ -1679,10 +1682,10 @@
 	YY_BREAK
 case 75:
 YY_RULE_SETUP
-#line 619 "language-scanner.lex"
+#line 622 "language-scanner.lex"
 ECHO;
 	YY_BREAK
-#line 1686 "language-scanner.c"
+#line 1689 "language-scanner.c"
 			case YY_STATE_EOF(ON_VAR):
 				yyterminate();
 
@@ -2566,4 +2569,4 @@
 	return 0;
 	}
 #endif
-#line 619 "language-scanner.lex"
+#line 622 "language-scanner.lex"
